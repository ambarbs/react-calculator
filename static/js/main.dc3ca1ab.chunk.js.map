{"version":3,"sources":["assets/history.svg","components/app/App.styles.js","components/calculator/Calculator.styles.js","components/calculator/utils.js","components/history/History.styles.js","components/history/History.js","components/calculator/keypads/KeyPad.styles.js","components/calculator/keypads/ScientificKeyPad.js","components/calculator/keypads/StandardKeyPad.js","components/calculator/constants.js","components/calculator/Calculator.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppWrapper","styled","div","CalculatorWrapper","DisplayLabel","label","props","height","color","fontSize","Grid","Icon","img","numberWithCommas","x","toString","replace","evaluateExpression","items","result","currentOp","error","forEach","item","includes","itemNum","Number","Math","round","getFontSize","text","length","FadeIn","keyframes","HistoryWrapper","HistoryItem","paddingRight","History","history","map","h","displayText","defaultProps","KeyPadWrapper","section","rows","scientific","KeyWrapper","width","borderRadius","bgColor","super","gridColumn","KeyWrapperScientific","KeyWrapperStandard","ScientificKeyPad","keymap","onClickHandler","key","value","onClick","e","sub","superPosition","StandardKeyPad","standardKeys","scientificKeys","Calculator","useState","expressionText","setExpressionText","mainDisplay","setMainDisplay","setItems","setHistory","showHistory","setShowHistory","historyButtonRef","useRef","event","current","contains","target","ref","src","historyImg","alt","_showHistory","char","innerText","lastItem","slice","lastChar","some","sign","pop","join","operators","operatorCount","isOperable","i","operator","isComputable","updatedLastItem","spreadElements","isNaN","updatedItems","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,qC,0bCEpC,IAAMC,EAAaC,IAAOC,IAAV,K,u3BCAhB,IAAMC,EAAoBF,IAAOC,IAAV,KAUjBE,EAAeH,IAAOI,MAAV,KAEb,SAACC,GAAD,OAAWA,EAAMC,QAAU,UAC5B,SAACD,GAAD,OAAWA,EAAME,OAAS,WACtB,SAACF,GAAD,OAAWA,EAAMG,YAInBC,EAAOT,IAAOC,IAAV,KASJS,EAAOV,IAAOW,IAAV,KC7BJC,EAAmB,SAACC,GAAD,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MAiBxEC,EAAqB,WAAmB,IAAlBC,EAAiB,uDAAT,CAAC,IAEtCC,EAAS,KAETC,EAAY,KAEZC,GAAQ,EAyDZ,OAxDAH,EAAMI,SAAQ,SAACC,GACb,IAAIF,GAIS,KAATE,EAAJ,CAGA,GAAI,CAAC,IAAK,IAAK,IAAK,OAAK,KAAKC,SAASD,GASrC,OARc,MAAVJ,IACFA,EAAS,GAEXC,EAAYG,OACC,MAATA,IAEFJ,GAAU,MAKd,IAAMM,EAAUC,OAAOH,GACvB,GAAiB,MAAbH,EAAJ,CAOA,OAAQA,GACN,IAAK,IACHD,GAAUM,EACV,MAEF,IAAK,IACHN,GAAUM,EACV,MAEF,IAAK,IACHN,GAAUM,EACV,MAEF,IAAK,OACa,IAAZA,EACFJ,GAAQ,EAERF,GAAUM,EAEZ,MAEF,QAEEJ,GAAQ,EAGZD,EAAY,UA/BVD,EAASM,MAiCTJ,EACK,OAEDM,KAAKC,MAAe,IAATT,GAAqB,KAAUJ,YAmCvCc,EAAc,SAACC,GAC1B,QAAQ,GACN,KAAKA,EAAKC,OAAS,EACjB,MAAO,OACT,KAAKD,EAAKC,OAAS,GACjB,MAAO,OACT,QACE,MAAO,S,4uBC3HN,IAAMC,EAASC,YAAH,KAKNC,EAAiBjC,IAAOC,IAAV,IAWZ8B,GAMFG,EAAclC,IAAOI,MAAV,KAGb,SAACC,GAAD,OAAWA,EAAME,OAAS,aAIlB,SAACF,GAAD,OAAWA,EAAM8B,gBC3B9BC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,kBAACJ,EAAD,KACGI,EAAQC,KAAI,SAACC,GAAD,OACX,oCACE,kBAACL,EAAD,CAAaC,aAAa,QACvBI,EAAEC,YACF,IAFH,KAKA,kBAACN,EAAD,CAAa3B,MAAM,SAASgC,EAAErB,cAMvBkB,I,ylCAMfA,EAAQK,aAAe,CACrBJ,QAAS,CAAC,CAAEG,YAAa,GAAItB,OAAQ,MCxBhC,IAAMwB,EAAgB1C,IAAO2C,QAAV,KAIC,SAACtC,GAAD,uBAAqBA,EAAMuC,KAA3B,cAKZ,SAACvC,GAAD,OAAYA,EAAMwC,WAAa,OAAS,UAI1CC,EAAa9C,IAAOC,IAAV,KACZ,SAACI,GAAD,OAAWA,EAAM0C,OAAS,SAElB,SAAC1C,GAAD,OAAWA,EAAM2C,cAAgB,SAC9B,SAAC3C,GAAD,OAAWA,EAAM4C,WAC5B,SAAC5C,GAAD,OAAWA,EAAME,SACf,SAACF,GAAD,OAAYA,EAAM6C,MAAQ,QAAU,UAMhC,SAAC7C,GAAD,OAAWA,EAAM8C,cAIrBC,EAAuBpD,YAAO8C,EAAP9C,CAAH,KAOpBqD,EAAqBrD,YAAO8C,EAAP9C,CAAH,KCJhBsD,EA9BU,SAAC,GAAD,QAAGC,cAAH,MAAY,GAAZ,EAAgBC,EAAhB,EAAgBA,eAAhB,OACvB,kBAACd,EAAD,CAAeE,KAAM,EAAGC,YAAU,GAC/BU,EAAOjB,KAAI,SAACmB,GAAD,OACV,kBAACL,EAAD,CACEK,IAAKA,EAAIC,MACTT,QAASQ,EAAIR,QACb1C,MAAOkD,EAAIlD,MACXoD,QAAS,SAACC,GACRJ,EAAeI,KAGdH,EAAIP,OAAWO,EAAII,IACpB,6BACGJ,EAAIP,OAA+B,WAAtBO,EAAIK,eAA8B,6BAAML,EAAIP,OACzDO,EAAIC,MACJD,EAAIP,OAA+B,UAAtBO,EAAIK,eAA6B,6BAAML,EAAIP,OACxDO,EAAII,KAAO,6BAAMJ,EAAII,MAEtB,6BAAMJ,EAAIC,aCDPK,EAjBQ,SAAC,GAAD,QAAGR,cAAH,MAAY,GAAZ,EAAgBC,EAAhB,EAAgBA,eAAhB,OACrB,kBAACd,EAAD,CAAeE,KAAM,GAClBW,EAAOjB,KAAI,SAACmB,GAAD,OACV,kBAACJ,EAAD,CACEI,IAAKA,EAAIC,MACTT,QAASQ,EAAIR,QACb1C,MAAOkD,EAAIlD,MACXoD,QAAS,SAACC,GACRJ,EAAeI,KAGhBH,EAAIC,YCfAM,EAAe,CACxB,CACIN,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,MACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,OACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,SACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,SACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,SACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,UACT1C,MAAO,SAEX,CACImD,MAAO,IACPT,QAAS,SACT1C,MAAO,UAIF0D,EAAiB,CAC1B,CAAEP,MAAO,IAAKT,QAAS,UAAW1C,MAAO,aACzC,CAAEmD,MAAO,IAAKT,QAAS,UAAW1C,MAAO,aACzC,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CACImD,MAAO,IAAKG,IAAK,KAAMZ,QAAS,UAAW1C,MAAO,aAEtD,CACImD,MAAO,IAAKR,MAAO,IAAKY,cAAe,QAASb,QAAS,UAAW1C,MAAO,aAE/E,CACImD,MAAO,IAAKR,MAAO,IAAKY,cAAe,QAASb,QAAS,UAAW1C,MAAO,aAE/E,CACImD,MAAO,IAAKR,MAAO,IAAKY,cAAe,QAASb,QAAS,UAAW1C,MAAO,aAE/E,CACImD,MAAO,IAAKR,MAAO,IAAKY,cAAe,QAASb,QAAS,UAAW1C,MAAO,aAE/E,CACImD,MAAO,KAAMR,MAAO,IAAKY,cAAe,QAASb,QAAS,UAAW1C,MAAO,aAEhF,CACImD,MAAO,IAAKR,MAAO,IAAKY,cAAe,SAAUD,IAAK,IAAKZ,QAAS,UAAW1C,MAAO,aAE1F,CACImD,MAAO,SAAUR,MAAO,IAAKY,cAAe,SAAUD,IAAK,IAAKZ,QAAS,UAAW1C,MAAO,aAE/F,CACImD,MAAO,SAAUR,MAAO,IAAKY,cAAe,SAAUD,IAAK,IAAKZ,QAAS,UAAW1C,MAAO,aAE/F,CACImD,MAAO,SAAUR,MAAO,IAAKY,cAAe,SAAUD,IAAK,IAAKZ,QAAS,UAAW1C,MAAO,aAE/F,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CACImD,MAAO,MAAOG,IAAK,KAAMZ,QAAS,UAAW1C,MAAO,aAExD,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CAAEmD,MAAO,MAAOT,QAAS,UAAW1C,MAAO,aAC3C,CAAEmD,MAAO,MAAOT,QAAS,UAAW1C,MAAO,aAC3C,CAAEmD,MAAO,MAAOT,QAAS,UAAW1C,MAAO,aAC3C,CAAEmD,MAAO,IAAKT,QAAS,UAAW1C,MAAO,aACzC,CAAEmD,MAAO,KAAMT,QAAS,UAAW1C,MAAO,aAC1C,CAAEmD,MAAO,MAAOT,QAAS,UAAW1C,MAAO,aAC3C,CAAEmD,MAAO,OAAQT,QAAS,UAAW1C,MAAO,aAC5C,CAAEmD,MAAO,OAAQT,QAAS,UAAW1C,MAAO,aAC5C,CAAEmD,MAAO,OAAQT,QAAS,UAAW1C,MAAO,aAC5C,CAAEmD,MAAO,SAAUT,QAAS,UAAW1C,MAAO,aAC9C,CAAEmD,MAAO,OAAQT,QAAS,UAAW1C,MAAO,cCLjC2D,EAlII,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBAChBC,EADgB,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAEhBG,EAFgB,KAEHC,EAFG,OAGGJ,mBAAS,CAAC,KAHb,mBAGhBlD,EAHgB,KAGTuD,EAHS,OAIOL,mBAAS,IAJhB,mBAIhB9B,EAJgB,KAIPoC,EAJO,OAKeN,oBAAS,GALxB,mBAKhBO,EALgB,KAKHC,EALG,KAMjBC,EAAmBC,mBAyFzB,OACE,kBAAC3E,EAAD,CACEyD,QAAS,SAACmB,GACJF,EAAiBG,UAAYH,EAAiBG,QAAQC,SAASF,EAAMG,SACvEN,GAAe,KAInB,kBAACxE,EAAD,CACEK,SAAS,OACTD,MAAM,OACND,OAAO,QAEN8D,GAEH,kBAACjE,EAAD,CACEK,SAAUoB,EAAYwC,IAErBE,GAEFI,GAAe,kBAAC,EAAD,CAASrC,QAASA,IAClC,kBAAC3B,EAAD,CACEwE,IAAKN,EACLO,IAAKC,IACLC,IAAI,UACJ1B,QAAS,kBAAMgB,GAAe,SAACW,GAAD,OAAkBjD,EAAQP,SAAWwD,QAErE,kBAAC7E,EAAD,KACE,kBAAC,EAAD,CAAkB8C,OAAQU,EAAgBT,eAAgB,eAC1D,kBAAC,EAAD,CAAgBD,OAAQS,EAAcR,eApHxB,SAACI,GACnB,IPtByB2B,EOsBnB7B,EAAQE,EAAEqB,OAAOO,UACjBC,EAAWxE,EAAMyE,OAAO,GAAG,GAC3BC,EAAWF,EAASC,OAAO,GAEjC,OAAQhC,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,OACL,IAAK,IACE,CAAC,IAAK,IAAK,IAAK,QAAKkC,MAAK,SAACC,GAAD,OAAUF,IAAaE,MAIpD5E,EAAM6E,MACNtB,EAAS,GAAD,mBAAKvD,GAAL,CAAYyC,KACpBW,EAAkB,GAAD,OAAIpD,EAAM8E,KAAK,KAAf,YAAuBrC,MALxCc,EAAS,GAAD,mBAAKvD,GAAL,CAAYyC,KACpBW,EAAkB,GAAD,OAAIpD,EAAM8E,KAAK,KAAf,YAAuBrC,KPsDtB,WAI1B,IAJ2C,IAAhBzC,EAAe,uDAAP,GAC7B+E,EAAY,CAAC,IAAK,IAAK,IAAK,OAAK,KACnCC,EAAgB,EAChBC,GAAa,EAHyB,WAIjCC,GACP,GAAIH,EAAUJ,MAAK,SAACQ,GAAD,OAAcA,IAAanF,EAAMkF,QAClDF,GAAiB,IACI,EAEnB,OADAC,GAAa,EACb,SALGC,EAAI,EAAGA,EAAIlF,EAAMa,OAAQqE,GAAK,EAAG,CAAC,IAAD,IAAjCA,GAAiC,eAKpC,MAIN,OAAOD,EO7DGG,CAAapF,IACfsD,EAAe3D,EAAiBI,EAAmBC,KAErD,MACF,IAAK,IACH,IAAMC,EAASF,EAAmBC,GAClCsD,EAAe3D,EAAiBM,IAEhCsD,EAAS,CAACtD,IACVuD,EAAW,GAAD,mBAAKpC,GAAL,CAAc,CAAEG,YAAa4B,EAAgBlD,aACvD,MAEF,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,IP9DqBqE,EO8DJI,IP9DqBJ,GAAQ,GAAKA,GAAQ,IO8DhB,MAAbI,EAAkB,CAC9C1E,EAAM6E,MACN,IAAMQ,EAAe,UAAMb,GAAN,OAAiB/B,GAChC6C,EAAc,sBAAOtF,GAAP,CAAcqF,IAClC/B,EAAe3D,EAAiB0F,IAChCjC,EAAkBkC,EAAeR,KAAK,MACtCvB,EAAS,YAAI+B,SAEbhC,EAAe3D,EAAiB8C,IAChCW,EAAkB,GAAD,OAAIpD,EAAM8E,KAAK,KAAf,YAAuBrC,IACxCc,EAAS,GAAD,mBAAKvD,GAAL,CAAYyC,KAEtB,MACF,IAAK,IAEH,GAAK8C,MAAMf,IAAcA,EAASlE,SAAS,MAKpC,GAAI,CAAC,IAAK,IAAK,IAAK,QAAKqE,MAAK,SAACC,GAAD,OAAUF,IAAaE,KAAO,CACjE,IAAMY,EAAY,sBAAOxF,GAAP,CAAc,OAChCuD,EAASiC,GACTpC,EAAkBoC,EAAaV,KAAK,WARW,CAC/C9E,EAAM6E,MACN,IAAMS,EAAc,sBAAOtF,GAAP,WAAiBwE,EAAjB,OACpBjB,EAAS+B,GACTlC,EAAkBkC,EAAeR,KAAK,MAMxC,MACF,IAAK,IACH1B,EAAkB,IAClBG,EAAS,CAAC,KACV,MACF,IAAK,MAEH,IAAKgC,MAAMf,GAAW,CACpB,IAAMa,IAAoB,EAAIb,GAAU3E,WACxCG,EAAM6E,MACN,IAAMW,EAAY,sBAAOxF,GAAP,CAAcqF,IAChC9B,EAASiC,GACTpC,EAAkBoC,EAAaV,KAAK,KACpCxB,EAAe3D,EAAiB0F,YC1F3BI,MARf,WACE,OACE,kBAAC3G,EAAD,KACE,kBAAC,EAAD,QCKc4G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvG,GACLwG,QAAQxG,MAAMA,EAAMyG,c","file":"static/js/main.dc3ca1ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/history.ceaa3da3.svg\";","import styled from 'styled-components';\r\n\r\nexport const AppWrapper = styled.div`\r\n  background-color: #6d6d6d;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height: 100vh;\r\n  @media (max-width: 576px) {\r\n   background-color: black;\r\n  }\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const CalculatorWrapper = styled.div`\r\n  position: relative;\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.75rem;\r\n`;\r\n\r\nexport const DisplayLabel = styled.label`\r\n  width: 100%;\r\n  height: ${(props) => props.height || '6rem'};\r\n  color: ${(props) => props.color || 'white'};\r\n  font-size: ${(props) => props.fontSize};\r\n  text-align: right;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-column-gap: 1rem;\r\n    @media only screen and (max-width: 576px) {\r\n    display: block;\r\n}\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  height: 40px;\r\n  width: 40px;\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  left: 1rem;\r\n  cursor: pointer;\r\n  @media only screen and (max-width: 576px) {\r\n    //top: -1rem;\r\n  }\r\n`;\r\n","export const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\nexport const isCharADigit = (char) => char && char >= 0 && char <= 10;\r\n\r\n/**\r\n *\r\n * @param str\r\n * @param find\r\n * @param replace\r\n * @returns {void | string | *}\r\n */\r\nexport const replaceAll = (str, find, replace) => str.replace(new RegExp(find, 'g'), replace);\r\n\r\n/**\r\n *\r\n * @param items\r\n */\r\nexport const evaluateExpression = (items = ['']) => {\r\n  // Current result, updated as we compute.\r\n  let result = null;\r\n  // The last pending binary operation.\r\n  let currentOp = null;\r\n  // Did calculation result in error?\r\n  let error = false;\r\n  items.forEach((item) => {\r\n    if (error) {\r\n      // Error state propagates on all further operations.\r\n      return;\r\n    }\r\n    if (item === '') {\r\n      return;\r\n    }\r\n    if (['+', '-', 'x', '÷', '%'].includes(item)) {\r\n      if (result == null) {\r\n        result = 0;\r\n      }\r\n      currentOp = item;\r\n      if (item === '%') {\r\n        // '%' is evaluated immediately on the current number.\r\n        result /= 100;\r\n      }\r\n      return;\r\n    }\r\n    // At this moment, item is a number.\r\n    const itemNum = Number(item);\r\n    if (currentOp == null) {\r\n      // Since there is no op queued, this is the first number we've seen.\r\n      result = itemNum;\r\n      return;\r\n    }\r\n    // We need to evaluate ('result' currentOp 'item').\r\n    // console.log('currentOp = ', currentOp);\r\n    switch (currentOp) {\r\n      case '+': {\r\n        result += itemNum;\r\n        break;\r\n      }\r\n      case '-': {\r\n        result -= itemNum;\r\n        break;\r\n      }\r\n      case 'x': {\r\n        result *= itemNum;\r\n        break;\r\n      }\r\n      case '÷': {\r\n        if (itemNum === 0) {\r\n          error = true;\r\n        } else {\r\n          result /= itemNum;\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        // console.error('Unknown operation ', currentOp);\r\n        error = true;\r\n      }\r\n    }\r\n    currentOp = null;\r\n  });\r\n  if (error) {\r\n    return 'Err';\r\n  }\r\n  return (Math.round(result * 10000000) / 10000000).toString();\r\n};\r\n\r\n/**\r\n *\r\n * @param items\r\n */\r\nexport const isComputable = (items = []) => {\r\n  const operators = ['+', '-', 'x', '÷', '%'];\r\n  let operatorCount = 0;\r\n  let isOperable = false;\r\n  for (let i = 0; i < items.length; i += 1) {\r\n    if (operators.some((operator) => operator === items[i])) {\r\n      operatorCount += 1;\r\n      if (operatorCount >= 1) {\r\n        isOperable = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return isOperable;\r\n};\r\n\r\n/**\r\n *\r\n * @param char\r\n * @returns {boolean}\r\n */\r\nexport const isOperator = (char) => ['+', '-', 'x', '÷', '%'].some((operator) => operator === char);\r\n\r\n/**\r\n *\r\n * @param text\r\n * @returns {string}\r\n */\r\nexport const getFontSize = (text) => {\r\n  switch (true) {\r\n    case text.length < 5:\r\n      return '4rem';\r\n    case text.length < 12:\r\n      return '3rem';\r\n    default:\r\n      return '2rem';\r\n  }\r\n};\r\n","import styled, { keyframes } from 'styled-components';\n\nexport const FadeIn = keyframes`\n  from { opacity: 0; }\n  to   { opacity: 0.9; }\n`;\n\nexport const HistoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 2;\n  padding: 0.5rem;\n  background-color: lightgrey;\n  color: black;\n  width: 35vw;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: ${FadeIn} forwards 2s;\n  @media only screen and (max-width: 576px) {\n    width: 75vw;\n  }\n`;\n\nexport const HistoryItem = styled.label`\n  font-size: 2rem;\n  font-weight: 500;\n  color: ${(props) => props.color || '#8B8B8B'};\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n  align-self: flex-end;\n  padding-right: ${(props) => props.paddingRight};\n`;\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { HistoryItem, HistoryWrapper } from './History.styles';\r\n\r\nconst History = ({ history }) => (\r\n  <HistoryWrapper>\r\n    {history.map((h) => (\r\n      <>\r\n        <HistoryItem paddingRight=\"1rem\">\r\n          {h.displayText}\r\n          {' '}\r\n          =\r\n        </HistoryItem>\r\n        <HistoryItem color=\"black\">{h.result}</HistoryItem>\r\n      </>\r\n    ))}\r\n  </HistoryWrapper>\r\n);\r\n\r\nexport default History;\r\n\r\nHistory.propTypes = {\r\n  history: PropTypes.arrayOf(Object),\r\n};\r\n\r\nHistory.defaultProps = {\r\n  history: [{ displayText: '', result: '' }],\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const KeyPadWrapper = styled.section`\r\n  display: grid;\r\n  justify-content: center;\r\n  width: 100%;\r\n  grid-template-columns: ${(props) => `repeat(${props.rows}, auto)`};\r\n  grid-template-rows: repeat(5, auto);\r\n  grid-gap: 1rem;\r\n\r\n  @media only screen and (max-width: 576px) {\r\n    display: ${(props) => (props.scientific ? 'none' : 'grid')};\r\n  }\r\n`;\r\n\r\nexport const KeyWrapper = styled.div`\r\n  width: ${(props) => props.width || '4vw'};\r\n  height: 4vw;\r\n  border-radius: ${(props) => props.borderRadius || '50%'};\r\n  background-color: ${(props) => props.bgColor};\r\n  color: ${(props) => props.color};\r\n  display: ${(props) => (props.super ? 'block' : 'flex')};\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  grid-column: ${(props) => props.gridColumn};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const KeyWrapperScientific = styled(KeyWrapper)`\r\n  font-size: 0.9rem;\r\n  @media only screen and (max-width: 800px) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nexport const KeyWrapperStandard = styled(KeyWrapper)`\r\n  &:nth-child(17) {\r\n    width: auto;\r\n    border-radius: 50px;\r\n    grid-column: 1 / span 2;\r\n  }\r\n  @media only screen and (max-width: 576px) {\r\n    width: 19vw;\r\n    height: 19vw;\r\n    font-weight: 400;\r\n    font-size: 1.75rem;\r\n  }\r\n`;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { KeyPadWrapper, KeyWrapperScientific } from './KeyPad.styles';\r\n\r\nconst ScientificKeyPad = ({ keymap = [], onClickHandler }) => (\r\n  <KeyPadWrapper rows={6} scientific>\r\n    {keymap.map((key) => (\r\n      <KeyWrapperScientific\r\n        key={key.value}\r\n        bgColor={key.bgColor}\r\n        color={key.color}\r\n        onClick={(e) => {\r\n          onClickHandler(e);\r\n        }}\r\n      >\r\n        {!!key.super || !!key.sub ? (\r\n          <div>\r\n            {key.super && key.superPosition === 'before' && <sup>{key.super}</sup>}\r\n            {key.value}\r\n            {key.super && key.superPosition === 'after' && <sup>{key.super}</sup>}\r\n            {key.sub && <sub>{key.sub}</sub>}\r\n          </div>\r\n        ) : <div>{key.value}</div>}\r\n\r\n      </KeyWrapperScientific>\r\n    ))}\r\n  </KeyPadWrapper>\r\n);\r\n\r\nScientificKeyPad.propTypes = {\r\n  keymap: PropTypes.arrayOf(Object).isRequired,\r\n  onClickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ScientificKeyPad;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { KeyPadWrapper, KeyWrapperStandard } from './KeyPad.styles';\r\n\r\nconst StandardKeyPad = ({ keymap = [], onClickHandler }) => (\r\n  <KeyPadWrapper rows={4}>\r\n    {keymap.map((key) => (\r\n      <KeyWrapperStandard\r\n        key={key.value}\r\n        bgColor={key.bgColor}\r\n        color={key.color}\r\n        onClick={(e) => {\r\n          onClickHandler(e);\r\n        }}\r\n      >\r\n        {key.value}\r\n      </KeyWrapperStandard>\r\n    ))}\r\n  </KeyPadWrapper>\r\n);\r\n\r\nexport default StandardKeyPad;\r\n\r\nStandardKeyPad.propTypes = {\r\n  keymap: PropTypes.arrayOf(Object).isRequired,\r\n  onClickHandler: PropTypes.func.isRequired,\r\n};\r\n","export const standardKeys = [\r\n    {\r\n        value: 'C',\r\n        bgColor: '#A5A5A5',\r\n        color: 'black',\r\n    },\r\n    {\r\n        value: '+/-',\r\n        bgColor: '#A5A5A5',\r\n        color: 'black',\r\n    },\r\n    {\r\n        value: '%',\r\n        bgColor: '#A5A5A5',\r\n        color: 'black',\r\n    },\r\n    {\r\n        value: '÷',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '7',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '8',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '9',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: 'x',\r\n        bgColor: 'orange',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '4',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '5',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '6',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '-',\r\n        bgColor: 'orange',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '1',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '2',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '3',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '+',\r\n        bgColor: 'orange',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '0',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '.',\r\n        bgColor: '#333333',\r\n        color: 'white',\r\n    },\r\n    {\r\n        value: '=',\r\n        bgColor: 'orange',\r\n        color: 'white',\r\n    },\r\n];\r\n\r\nexport const scientificKeys = [\r\n    { value: '(', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: ')', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'mc', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'm+', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'm-', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'mr', bgColor: '#212121', color: 'lightgrey' },\r\n    {\r\n        value: '2', sub: 'nd', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: 'x', super: '2', superPosition: 'after', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: 'x', super: '3', superPosition: 'after', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: 'x', super: 'y', superPosition: 'after', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: 'e', super: 'x', superPosition: 'after', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: '10', super: 'x', superPosition: 'after', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: '/', super: '1', superPosition: 'before', sub: 'x', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: '\\u221A', super: '2', superPosition: 'before', sub: 'x', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: '\\u221A', super: '3', superPosition: 'before', sub: 'x', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    {\r\n        value: '\\u221A', super: 'y', superPosition: 'before', sub: 'x', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    { value: 'ln', bgColor: '#212121', color: 'lightgrey' },\r\n    {\r\n        value: 'log', sub: '10', bgColor: '#212121', color: 'lightgrey',\r\n    },\r\n    { value: 'x!', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'sin', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'cos', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'tan', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'e', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'EE', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'Rad', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'sinh', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'cosh', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'tanh', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: '\\u03C0', bgColor: '#212121', color: 'lightgrey' },\r\n    { value: 'Rand', bgColor: '#212121', color: 'lightgrey' },\r\n];\r\nexport const operatorMap = {\r\n    '+': '+',\r\n    '-': '-',\r\n    '÷': '/',\r\n    x: '*',\r\n    '%': '%',\r\n};","import React, { useState, useRef } from 'react';\r\nimport {\r\n  CalculatorWrapper,\r\n  DisplayLabel, Grid, Icon,\r\n} from './Calculator.styles';\r\nimport {\r\n  evaluateExpression, getFontSize,\r\n  isCharADigit, isComputable, numberWithCommas,\r\n} from './utils';\r\nimport historyImg from '../../assets/history.svg';\r\nimport History from '../history/History';\r\nimport ScientificKeyPad from './keypads/ScientificKeyPad';\r\nimport StandardKeyPad from './keypads/StandardKeyPad';\r\nimport { scientificKeys, standardKeys } from './constants';\r\n\r\nconst Calculator = () => {\r\n  const [expressionText, setExpressionText] = useState('');\r\n  const [mainDisplay, setMainDisplay] = useState('');\r\n  const [items, setItems] = useState(['']);\r\n  const [history, setHistory] = useState([]);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const historyButtonRef = useRef();\r\n\r\n  const handleClick = (e) => {\r\n    const value = e.target.innerText;\r\n    const lastItem = items.slice(-1)[0];\r\n    const lastChar = lastItem.slice(-1);\r\n\r\n    switch (value) {\r\n      case '+':\r\n      case '-':\r\n      case 'x':\r\n      case '÷':\r\n      case '%':\r\n        if (!['+', '-', 'x', '÷'].some((sign) => lastChar === sign)) {\r\n          setItems([...items, value]);\r\n          setExpressionText(`${items.join(' ')} ${value}`);\r\n        } else {\r\n          items.pop();\r\n          setItems([...items, value]);\r\n          setExpressionText(`${items.join(' ')} ${value}`);\r\n        }\r\n        if (isComputable(items)) {\r\n          setMainDisplay(numberWithCommas(evaluateExpression(items)));\r\n        }\r\n        break;\r\n      case '=': {\r\n        const result = evaluateExpression(items);\r\n        setMainDisplay(numberWithCommas(result));\r\n        // setExpressionText(result);\r\n        setItems([result]);\r\n        setHistory([...history, { displayText: expressionText, result }]);\r\n        break;\r\n      }\r\n      case '0':\r\n      case '1':\r\n      case '2':\r\n      case '3':\r\n      case '4':\r\n      case '5':\r\n      case '6':\r\n      case '7':\r\n      case '8':\r\n      case '9':\r\n        if (isCharADigit(lastChar) || lastChar === '.') {\r\n          items.pop();\r\n          const updatedLastItem = `${lastItem}${value}`;\r\n          const spreadElements = [...items, updatedLastItem];\r\n          setMainDisplay(numberWithCommas(updatedLastItem));\r\n          setExpressionText(spreadElements.join(' '));\r\n          setItems([...spreadElements]);\r\n        } else {\r\n          setMainDisplay(numberWithCommas(value));\r\n          setExpressionText(`${items.join(' ')} ${value}`);\r\n          setItems([...items, value]);\r\n        }\r\n        break;\r\n      case '.':\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (!isNaN(lastItem) && !lastItem.includes('.')) {\r\n          items.pop();\r\n          const spreadElements = [...items, `${lastItem}.`];\r\n          setItems(spreadElements);\r\n          setExpressionText(spreadElements.join(' '));\r\n        } else if (['+', '-', 'x', '÷'].some((sign) => lastChar === sign)) {\r\n          const updatedItems = [...items, '0.'];\r\n          setItems(updatedItems);\r\n          setExpressionText(updatedItems.join(' '));\r\n        }\r\n        break;\r\n      case 'C':\r\n        setExpressionText('');\r\n        setItems(['']);\r\n        break;\r\n      case '+/-':\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (!isNaN(lastItem)) {\r\n          const updatedLastItem = (-1 * lastItem).toString();\r\n          items.pop();\r\n          const updatedItems = [...items, updatedLastItem];\r\n          setItems(updatedItems);\r\n          setExpressionText(updatedItems.join(''));\r\n          setMainDisplay(numberWithCommas(updatedLastItem));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CalculatorWrapper\r\n      onClick={(event) => {\r\n        if (historyButtonRef.current && !historyButtonRef.current.contains(event.target)) {\r\n          setShowHistory(false);\r\n        }\r\n      }}\r\n    >\r\n      <DisplayLabel\r\n        fontSize=\"1rem\"\r\n        color=\"grey\"\r\n        height=\"2rem\"\r\n      >\r\n        {expressionText}\r\n      </DisplayLabel>\r\n      <DisplayLabel\r\n        fontSize={getFontSize(expressionText)}\r\n      >\r\n        {mainDisplay}\r\n      </DisplayLabel>\r\n      {showHistory && <History history={history} />}\r\n      <Icon\r\n        ref={historyButtonRef}\r\n        src={historyImg}\r\n        alt=\"history\"\r\n        onClick={() => setShowHistory((_showHistory) => history.length && !_showHistory)}\r\n      />\r\n      <Grid>\r\n        <ScientificKeyPad keymap={scientificKeys} onClickHandler={() => {}} />\r\n        <StandardKeyPad keymap={standardKeys} onClickHandler={handleClick} />\r\n      </Grid>\r\n    </CalculatorWrapper>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\nimport { AppWrapper } from './App.styles';\r\nimport Calculator from '../calculator/Calculator';\r\n\r\nfunction App() {\r\n  return (\r\n    <AppWrapper>\r\n      <Calculator />\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}